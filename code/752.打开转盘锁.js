/*
 * @lc app=leetcode.cn id=752 lang=javascript
 *
 * [752] 打开转盘锁
 */

// @lc code=start
/**
 * @param {string[]} deadends
 * @param {string} target
 * @return {number}
 */
var openLock = function (deadends, target) {
  const seens = { '0000': 0 }
  const queue = ['0000', null]
  let depth = 0
  while (queue.length) {
    const node = queue.shift()
    if (!node) {
      depth++
      if (queue[queue.length - 1]) {
        queue.push(null)
      }
    } else {
      if (node === target) {
        return depth
      }
      if (!deadends.includes(node)) {
        const numbers = node.split('')
        for (let index = 0; index < 4; index++) {
          for (let i = -1; i <= 1; i += 2) {
            const num = (10 + parseInt(node.charAt(index), 10) + i) % 10
            const nums = [...numbers]
            nums[index] = num
            const newNode = nums.join('')
            if (!seens[newNode]) {
              queue.push(newNode)
              seens[newNode] = 1
            }
          }
        }
      }
    }
  }
  return -1
}

/**
 * @param {string[]} deadends
 * @param {string} target
 * @return {number}
 */
// var openLock = function (deadends, target) {
//   const q = [target]
//   const mem = {}
//   mem[target] = 0

//   const getNextPositions = function (pos) {
//     const dir = [-1, 1]
//     const arr = pos.split('')
//     const positions = []
//     let i, j

//     for (j = 0; j < 2; j++) {
//       for (i = 0; i < 4; i++) {
//         const n = (10 + parseInt(arr[i], 10) + dir[j]) % 10
//         const next = [...arr]
//         next[i] = n
//         positions.push(next.join(''))
//       }
//     }
//     return positions
//   }

//   while (q.length) {
//     const pos = q.shift()
//     if (pos === '0000') {
//       return mem[pos]
//     } else {
//       const next = getNextPositions(pos)
//       next.forEach(function (n) {
//         // if we haven't seen n before, and it's not a dead end,
//         if (mem[n] === undefined && !deadends.includes(n)) {
//           // mark the distance and enqueue to check out next
//           mem[n] = mem[pos] + 1
//           q.push(n)
//         }
//       })
//     }
//   }
//   // if we end up here, we couldn't find it
//   return -1
// }
// @lc code=end

console.time('xx')
console.log(openLock(['7666', '7677', '8787', '6877', '7788', '6767', '7787', '8667', '7866', '6767', '8886', '8686', '8778', '8677', '6688', '6676', '8866', '6787', '7888', '8877', '8788', '7666', '6666', '6776', '8686', '8786', '8676', '6887', '8668', '6676', '7777', '6877', '8676', '7768', '6888', '8666', '7876', '8776', '8878', '8687', '8676', '6876', '8686', '6886', '8687', '7666', '7776', '6788', '6876', '7866', '8666', '8868', '7888', '7767', '8668', '7668', '7666', '7767', '6767', '7866', '8666', '7667', '7766', '6786', '7766', '8767', '6676', '7777', '8687', '8768', '7786', '7868', '6867', '6788', '7786', '6778', '7667', '8866', '8866', '7787', '6777', '6878', '7877', '6876', '6868', '7886', '6876', '8687', '8666', '8787', '6787', '8768', '7778', '7667', '6887', '6686', '6776', '8877', '6868', '6666', '8778', '8787', '8777', '6868', '6677', '6877', '8688', '6778', '6878', '8887', '6687', '8666', '7866', '6776', '8866', '7778', '6676', '8788', '6867', '8688', '7768', '6866', '8786', '8778', '8676', '7886', '8676', '8688', '6766', '7867', '8786', '6766', '6766', '7778', '6887', '6666', '6786', '8676', '7888', '6877', '7876', '7886', '6677', '6888', '6776', '8777', '8778', '7876', '6867', '7876', '7887', '6867', '7777', '6778', '7766', '6888', '7677', '7678', '7778', '6677', '8766', '8777', '7866', '7777', '8888', '6868', '8886', '6676', '8786', '7687', '8787', '7868', '8688', '6666', '8687', '8767', '8777', '8777', '6786', '8888', '8688', '8687', '7886', '6886', '8676', '8786', '7687', '7667', '7688', '8678', '7787', '7876', '7878', '6666', '6866', '7787', '7866', '6768', '6778', '8787', '8678', '7868', '6786', '8886', '8786', '8688', '7776', '8676', '6888', '7767', '8766', '8788', '8676', '8888', '6686', '8667', '6688', '6876', '6667', '7688', '8887', '6768', '6778', '8676', '7867', '6776', '7866', '8686', '7668', '7776', '6768', '6767', '8666', '6887', '8887', '8888', '8767', '8687', '6787', '8876', '6667', '8686', '6786', '6777', '7766', '8878', '8676', '8676', '7777', '6677', '7686', '7887', '7868', '8666', '8778', '8667', '7787', '7678', '8766', '7686', '8787', '6886', '8778', '7868', '6778', '8687', '8768', '8666', '8688', '6866', '7788', '6777', '7878', '7666', '8878', '7667', '8676', '6778', '6777', '7787', '8866', '8777', '7678', '8767', '6666', '6887', '6888', '8666', '6686', '6668', '6687', '8866', '7686', '7678', '8687', '8788', '6767', '7877', '6668', '7777', '7878', '8786', '8666', '8866', '7687', '6878', '6878', '7887', '8778', '6867', '7688', '8867', '6778', '8778', '7887', '8787', '8786', '8666', '7786', '8777', '6667', '7788', '6886', '6766', '8877', '6867', '7767', '6888', '8886', '6888', '8668', '6867', '6768', '8677', '8677', '7676', '8666', '7688', '6666', '8668', '8886', '8877', '7768', '7767', '6876', '7776', '7768', '8677', '8688', '7668', '7778', '7867', '6668', '8666', '8866', '6867', '7777', '6886', '8676', '6776', '7867', '8686', '8878', '7768', '7666', '7788', '7888', '7768', '7886', '6688', '7867', '8788', '7688', '6878', '6886', '7676', '7867', '7878', '6778', '6877', '8778', '6686', '6666', '6787', '7766', '7667', '7667', '8778', '7776', '6876', '8688', '8666', '7887', '7866', '8866', '7678', '7767', '6777', '6767', '7866', '7667', '6867', '8776', '7777', '6788', '6888', '8876', '8866', '6767', '6886', '6868', '7786', '7768', '8667', '7687', '6878', '8867', '8767', '6786', '8787', '7687', '8887', '6787', '8668', '8878', '7876', '6688', '8868', '8787', '7676', '8686', '6667', '6766', '7776', '7767', '8876', '6668', '8688', '7868', '7867', '7666', '8768', '8877', '7777', '7768', '8788', '7876', '8766', '6676', '8668', '6688', '8866', '7688', '6768', '8787', '6866', '7666', '7868', '6778', '6868', '6667', '7666', '8768', '7867', '8687', '8768', '7667', '6677', '7678', '7876', '7678', '8878', '7667', '6786', '8867', '6766', '6788', '7888', '7677', '7887', '6666', '6887', '7886', '7786', '7687', '6677', '6867', '8677', '6676', '6666', '8787', '8676', '8787', '8888', '8678', '6767', '7888', '8887', '7688', '8876'], '6678'))
console.timeEnd('xx')

console.time('xx')
console.log(openLock(['6678', '8666', '7877', '8677', '6777', '6777', '6767', '7877', '8687', '8788', '6667', '6768', '7667', '7786', '7667', '6878', '7668', '7778', '6776', '6787', '6766', '8877', '7688', '7876', '8777', '8677', '7866', '8688', '7686', '8877', '7866', '7777', '7787', '7676', '8688', '7866', '8787', '7876', '6887', '8677', '8778', '7886', '8788', '6686', '7788', '7787', '8687', '8777', '7888', '7767', '8678', '8877', '7866', '8776', '8687', '8878', '8776', '7877', '7788', '8687', '8776', '6866', '7776', '8877', '6886', '6778', '7788', '8666', '6668', '7768', '8886', '8888', '8666', '8768', '8878', '7666', '8766', '7678', '8688', '6866', '7887', '7887', '8867', '8668', '7777', '6687', '8886', '8768', '8687', '8678', '8876', '8776', '8777', '6776', '6876', '8878', '8877', '7876', '6867', '8886', '6687', '8886', '6777', '7678', '8777', '8768', '8868', '8777', '7877', '6676', '6876', '7778', '7668', '6687', '6666', '8786', '6876', '7868', '8676', '7888', '8886', '8666', '6876', '7788', '8867', '6766', '8877', '6668', '8887', '7866', '8776', '6687', '7787', '7688', '8767', '6667', '8876', '8678', '6686', '7668', '6687', '8878', '7886', '7788', '6788', '7868', '7887', '8766', '7668', '8866', '7877', '7876', '6878', '6868', '8688', '6866', '6886', '8888', '6766', '6877', '8678', '7778', '8666', '8777', '6787', '8788', '6886', '6887', '7886', '6668', '7868', '6868', '6877', '6766', '8778', '7687', '7686', '7667', '7676', '7778', '6778', '6677', '8687', '7867', '7786', '6866', '6767', '6688', '7778', '6778', '6766', '7877', '6766', '8678', '7786', '8886', '7666', '8666', '7676', '8888', '7666', '7787', '8768', '7767', '7886', '7688', '6776', '7876', '7686', '7677', '7867', '6667', '7877', '7766', '7777', '8877', '7778', '7777', '7868', '6686', '6676', '7676', '7887', '8778', '8888', '7687', '6686', '8876', '7767', '7888', '8666', '7768', '6686', '7768', '7678', '8867', '7767', '6866', '8876', '7688', '8766', '7777', '7687', '8686', '8687', '6868', '7887', '8786', '6688', '6777', '6666', '8688', '6877', '7687', '7767', '7668', '8668', '6777', '8786', '8876', '6688', '8878', '6887', '8886', '7788', '8678', '7788', '6677', '6667', '6867', '6886', '7687', '7778', '7776', '7678', '6768', '7668', '6678', '6887', '6888', '8687', '8787', '8866', '7677', '8667', '6876', '8787', '6786', '6688', '7786', '6777', '8777', '6778', '6787', '7886', '8878', '8677', '6677', '7766', '7876', '8667', '7668', '7867', '6888', '7687', '8666', '6868', '6767', '7768', '8876', '8867', '6866', '6687', '8878', '6866', '8888', '7788', '6687', '6878', '8676', '8686', '7768', '6686', '6787', '8687', '7888', '6867', '7886', '8777', '6676', '7678', '6868', '8766', '7787', '8688', '7868', '6876', '8677', '6878', '6888', '6788', '6686', '7887', '6678', '6786', '7668', '7867', '8686', '7686', '8886', '6688', '7877', '7866', '8887', '7666', '8688', '8868', '7787', '6867', '8666', '7766', '6787', '6668', '8866', '8786', '7876', '6788', '7686', '6667', '8878', '7868', '6886', '6887', '6768', '7777', '6877', '8766', '6876', '8687', '8777', '7687', '8878', '7778', '7868', '6868', '8887', '8686', '7677', '7788', '7766', '6777', '7686', '7766', '8677', '6767', '8777', '8776', '6686', '6678', '6668', '8687', '8878', '6776', '7687', '7868', '8876', '6676', '8878', '7868', '6788', '7677', '6776', '7768', '6677', '6788', '6677', '6767', '6678', '7766', '6688', '7788', '6778', '8678', '7777', '7676', '6688', '6767', '7777', '8686', '8766', '8668', '6766', '7666', '8687', '8786', '6777', '6686', '7667', '8776', '7777', '7887', '6878', '8876', '7668', '6866', '6766', '6778', '8866', '7768', '6877', '8788', '8776', '7877', '8776', '6767', '8776', '8868', '6678', '6666', '7668', '8777', '6877', '6677', '8888', '6767', '6787', '7777', '8868', '6777', '7688', '6668', '6876', '6678', '8766', '8676', '6786', '8676', '6788', '6878', '8878', '7666', '8766', '8868', '6767', '8876', '8678', '6688', '7766', '7877', '6777', '7888', '6676', '7867', '8676', '7688', '8888', '6777', '8687', '6667', '6667'], '7878'))
console.timeEnd('xx')
